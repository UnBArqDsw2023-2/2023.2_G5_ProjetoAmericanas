# 2.1.1.1. Diagrama de Classes

## 1. Versionamento

| Versão |                      Alteração                      |    Responsável     |      Revisor       | Data  |
| :----: | :-------------------------------------------------: | :----------------: | :----------------: | :---: |
|  1.0   |  Criação do documento   | [Fellipe Pereira](https://github.com/fellipepcs)  | [Leonardo M. Miranda](https://github.com/leomichalski) | 05/10/2023 |
|  1.1   |  Introdução   | [Fellipe Pereira](https://github.com/fellipepcs) & [Leonardo M. Miranda](https://github.com/leomichalski) | [Leonardo M. Miranda](https://github.com/leomichalski)| 05/10/2023 |
|  1.2   |  Desenvolvimento   | [Fellipe Pereira](https://github.com/fellipepcs) & [Leonardo M. Miranda](https://github.com/leomichalski)  | [Leonardo M. Miranda](https://github.com/leomichalski) | 05/10/2023 |

<br/>
<br/>

## 2. Introdução
Diagramas de Estado, também conhecidos como diagramas de estados UML (Unified Modeling Language), são uma representação gráfica utilizada na engenharia de software para descrever o comportamento de um objeto ou sistema em resposta a diferentes eventos. Eles descrevem os estados possíveis de um objeto, as transições entre esses estados e as ações que ocorrem em cada estado. Aqui está uma breve introdução sobre os diagramas de estados:

**Importância:**

- **Modelagem de Comportamento:** Os diagramas de estados permitem modelar o comportamento de um objeto ou sistema, mostrando como ele responde a eventos específicos e como transita entre estados.
- **Comunicação Efetiva:** São uma linguagem de comunicação visual que ajuda desenvolvedores, designers e outros stakeholders a compreender e discutir o comportamento de um sistema de forma clara e concisa.
- **Validação de Requisitos:** Podem ser usados para validar se os requisitos do sistema estão corretamente representados em termos de comportamento.

**Uso:**

- **Design de Software:** Diagramas de estado são usados na fase de design de software para definir o comportamento de objetos ou sistemas, especificando estados, eventos e transições.
- **Teste de Software:** São úteis na criação de casos de teste, pois ajudam a identificar as diferentes sequências de estados e transições que um sistema deve suportar.
- **Controle de Processos:** São aplicados em sistemas de controle e automação para modelar o comportamento de máquinas, dispositivos ou processos.
- **Análise de Comportamento de Usuário:** Podem ser usados para modelar o comportamento de um usuário em um sistema, como em um sistema de interface de usuário.

Assim como os diagramas de classe, os diagramas de estado desempenham um papel fundamental no desenvolvimento de software, permitindo uma compreensão clara do comportamento do sistema e facilitando a comunicação entre os membros da equipe de desenvolvimento e stakeholders.

<br/>


## 3. Desenvolvimento
No processo de desenvolvimento do sistema para a Americanas, utilizamos a ferramenta Draw.io para criar um diagrama de estados UML que representa os principais componentes do sistema, focando nos estados e transições relacionados ao Perfil de Comprador, na Plataforma e nos fluxos relacionados às avaliações de produtos.

O diagrama de estados criado no Draw.io nos permitiu visualizar de forma clara como o Perfil de Comprador interage com a Plataforma e como os diferentes estados desse perfil se relacionam com as avaliações de produtos. Ele também ajudou a definir como o sistema responde a eventos específicos, como a submissão de uma avaliação ou a atualização de informações do perfil do comprador.

Essa representação gráfica do comportamento do sistema foi valiosa durante o processo de desenvolvimento, auxiliando na compreensão do fluxo de estados e nas interações entre os componentes do sistema. Além disso, o diagrama de estados serviu como uma ferramenta de comunicação eficaz entre os membros da equipe de desenvolvimento e os stakeholders, garantindo que todos tivessem uma compreensão clara do comportamento do sistema.

**Diagrama de Estados:**
    <img align="center" src="./img/diagramadeestados.drawio.png">

